/* hacemos que el html y el body tengan una altura y anchura de 100% para que los elementos ocupen toda la pantalla*/
html,
body {
    width: 100%;
    height: 100%;
}

#container {
    display: flex;
    flex-direction: column;
    height: 100%;
}

/* TARJETA "SKILLS"*/

/* en esta especie de "tarjeta" se visualizarán los datos de la base de datos. Comenzamos por darle display flex y centrar los elementos (tarjeta y slider) con align-items y justify-content en este contenedor padre. Webkit para compatibilidad*/

#skills {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%;
}

/* TARJETA */

/* con esto le damos estilo a la tarjeta (tamaño, fondo, centrar elementos con display:flex). Para el título h1 empleamos otro cálculo realizado con clamp y calc para conseguir que el tamaño del texto se vaya adaptando de forma más fluida según el tamaño del navegador. Webkit para compatibilidad  */

#card {
    background-image: url(../img/card_bg.png);
    background-repeat: no-repeat;
    background-size: 100% 100%;
    width: 80%;
   /*  height: 90%; */
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    padding: 2rem;
    padding-bottom: 3rem;
}

#card_content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
    justify-content: space-evenly;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    height: 100%;
}

#card_content h1 {
    font-family: var(--title-font);
    color: var(--text-white);
    text-align: center;
    font-size: clamp(1.5rem, calc(1.5rem + ((1vw - 0.48rem) * 1.3889)), 2.5rem);
    -webkit-margin-after: 0;
    margin-block-end: 0;
    -webkit-margin-before: 0;
    margin-block-start: 0;
    font-variant: small-caps;
}

/* logramos que el círculo que corresponde con cada skill esté rodeada por un círculo de aspecto "pintado" usando position:relative en el div padre y con ::after posicionamos dicho círculo como background */

#img_skill {
    position: relative;
}

#img_skill img {
    width: 8rem;
}

#img_skill::after {
    content: '';
    position: absolute;
    bottom: 0.5rem;
    left: 0rem;
    right: 0rem;
    height: 95%;
    z-index: -1;
    background-image: url('../img/circle.svg');
    background-repeat: no-repeat;
    background-size: cover;
}

/* le damos un tamaño a la parte de la descripción de la tarjeta y display:flex con flex-direction:column para que los elementos salgan en columna. Volvemos a usar el cálculo con clamp para hacer que el texto se adapte de forma fluida al tamaño del navegador y modificamos los márgenes que tiene por defecto. Webkit para compatibilidad*/

#description {
    width: 40%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}

#description p {
    font-family: var(--text-font);
    color: var(--text-white);
    font-size: clamp(1.8rem, calc(1.8rem + ((1vw - 0.48rem) * 1.6667)), 3rem);
    font-variant: small-caps;
    -webkit-margin-before: 0.1em;
    margin-block-start: 0.1em;
    -webkit-margin-after: 1em;
    margin-block-end: 1em;
    -webkit-margin-start: 0px;
    margin-inline-start: 0px;
    -webkit-margin-end: 0px;
    margin-inline-end: 0px;
}

/* usamos span para incluir las imágenes de los iconos de los controles asociados con cada skill y poder intercalarlos con la descripción. Con vertical-align:middle nos aseguramos que las imágenes están centradas de forma vertical al texto */

#description span {
    text-align: center
}

#description span img {
    width: 1em;
    vertical-align: middle;
}

/* con esto logramos colocar un recuadro de efecto "pintado" alrededor de la foto de ejemplo de la skill dentro del juego usando el mismo método de antes: position relative en el elemento padre, ::after posicionado con top, bottom, left y rigth y recuadro como background-image */

#description_img {
    position: relative;
    display: block;
    width: 100%;
    height: auto;
    background-color: transparent;
}

#description_img img {
    width: clamp(18rem, calc(18rem + ((1vw - 0.48rem) * 26.3889)), 37rem);
}

#description_img::after {
    content: '';
    position: absolute;
    top: -0.5rem;
    bottom: 0rem;
    left: -0.5rem;
    right: -0.5rem;
    height: 103%;
    background-image: url('../img/frame.png');
    background-repeat: no-repeat;
    background-size: cover;
}

#profile {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
}

/* SLIDER */

/* modificación del estilo del carrusel del plugin de JQuery "Owl Carousel.js" para adaptarlo a las necesidades del proyecto. Comenzamos por el contenedor padre del slider/carrusel, indicando su tamaño, centrar el elemento al crearse el margen automáticamente y equitativamente entre ambos lados (derecho e izquierdo) */

.carousel-wrap {
    width: 85vw;
    margin: auto;
    /* position: relative; */
}

.slider {
    padding: 0 10em;
}

/* esto hace que el div padre donde se encuentran los botones para ir al siguiente o anterior elemento no ocupe espacio */

.owl-carousel .owl-nav {
    overflow: hidden;
    height: 0px;
    margin-top: 0px;
}

/* con esto hacemos que el elemento que esté en el centro esté opaco y con un círculo "pintado" para indicarle al usuario que es la opción seleccionada y de la que se van a conseguir los datos */

.item img {
    width: 9em;
    opacity: 0.3;
    -webkit-transition: all .4s;
    -o-transition: all .4s;
    transition: all .4s;
}

.item img:hover {
    opacity: 1;
    cursor: pointer;
}

.center img {
    opacity: 1 !important;
}

.center::after {
    content: '';
    position: absolute;
    bottom: 0rem;
    left: 0rem;
    right: 0rem;
    height: 98%;
    z-index: -1;
    background-image: url('../img/circle.svg');
    background-repeat: no-repeat;
    background-size: cover;
}

/* lo siguiente hace que las imágenes personalizadas que usamos como flechas actúen como los botones de siguiente y anterior y que estén colocadas correctamente. Webkit para compatibilidad*/

.owl-carousel .nav-btn {
    position: absolute;
    cursor: pointer;
    top: 30% !important;
}

.nav-btn img {
    width: 2em;
}

.owl-carousel .prev-slide {
    -webkit-transform: rotate(-180deg);
    -ms-transform: rotate(-180deg);
    transform: rotate(-180deg);
    opacity: 0.5;
    left: 100px;
}

.owl-carousel .next-slide {
    opacity: 0.5;
    right: 100px;
}

.owl-carousel .prev-slide:hover,
.next-slide:hover {
    opacity: 1;
}

/* BREAKPOINT IPAD */
/* modificamos el tamaño de la tarjeta para que se ajuste mejor al tamaño del iPad cuando está en modo vertical */

@media screen and (min-width: 768px) and (max-width: 1280px) and (orientation:portrait){

    #card{
        height: 48em;
    }
}

@media screen and (min-width: 800px) and (max-width: 1280px){

    html{
        height: initial;
        min-height: 100%;
    }
    
    body{
        height: 100%;
    }

   /*  #card{
        height: 55em;
    } */

    #card_content {
        -webkit-box-orient: vertical;
        -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse;
    }

    #img_skill img {
        width: 10rem;
    }

    #description {
        width: 90%;
        margin-bottom: 2rem;
    }

    #description p {
        width: 90%;
        font-size: 2.1em;
        -webkit-margin-before: 1rem;
        margin-block-start: 1rem;
        margin-block-end: 0rem;
        -webkit-margin-start: 0rem;
    }

    #description_img img {
        width: 25rem;
    }

}


/* BREAKPOINT MÓVIL */
/* para móvil cambiamos la dirección de los flex para poner los contenidos en columna y modificar el tamaño de algunos elementos para ajustarlos mejor a las dimensiones de móvil. Webkit para compatibilidad */

@media screen and (min-width: 343px) and (max-width: 799px) {

   /*  html,
    body {
        width: initial;
        height: initial; */
        /* min-width: 100%;
        min-height: 100%; */
   /*      min-width: initial;
        min-height: initial;
    } */

    html{
        height: initial;
        min-height: 100%;
    }
    
    body{
        height: 100%;
    }

    #skills {
        -webkit-box-orient: vertical;
        -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse;
    }

    #card {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        width: 90%;
    }

    #card_content {
        -webkit-box-orient: vertical;
        -webkit-box-direction: reverse;
        -ms-flex-direction: column-reverse;
        flex-direction: column-reverse;
        -ms-flex-pack: distribute;
        justify-content: space-around;
    }

    #profile {
        margin-top: 2rem;
    }

    #description {
        width: initial;
    }

    .carousel-wrap {
        width: 100vw;
    }

    .nav-btn img {
        width: 1.5rem;
    }
}