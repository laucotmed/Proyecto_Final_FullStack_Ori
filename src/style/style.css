/* TIPOGRAFÍAS */

/* incluimos dos tipografías descargadas y dos tipografías de Google Fonts en caso que las descargadas no puedan visualizarse correctamente */

@font-face { font-family: LemonCake; src: url('../fonts/LemonCake.otf'); }
@font-face { font-family: LeviBrush; src: url('../fonts/LEVIBRUSH.TTF'); }
@import url('https://fonts.googleapis.com/css2?family=PT+Sans+Narrow&family=Permanent+Marker&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Amatic+SC:wght@700&family=PT+Sans+Narrow&family=Permanent+Marker&display=swap');

/* COLORES Y TIPOGRAFÍAS ROOT */

/* en el root vamos a indicar los colores y tipografías que usaremos en toda la web, para poder modificar fácilmente alguno de ellos si queremos */

:root {
    --accent-orange: #E67E35;
    --text-white:#F1F1F1;
    --title-font: LeviBrush,'Permanent Marker';
    --text-font: LemonCake, 'Amatic SC';
}

/* usamos este selector universal para hacer que todos los tamaños del documento tengan en cuenta el padding */

*{
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}

/* le quitamos el margin y el padding al body para evitar bordes blancos indeseados, y le damos una altura y anchura de mínimo 100% para que ocupen toda la pantalla*/
html, body{
    margin: 0;
    padding: 0;
    min-height: 100%;
    min-width: 100%;
}

/* BACKGROUND */

body{
    background: linear-gradient(192.01deg, #0D0D2E 7.77%, #0A184B 47.18%, #2C0E31 92.33%);
    background-repeat: no-repeat;
}

/* MENÚ PRINCIPAL */

/* le damos un ancho de 100% al menú para que ocupe toda la parte de arriba de nuestra web, y con display flex alineamos los elementos del menú (logo y links a otras páginas). Ajustamos también el tamaño del logo  */

.menu{
    padding: 0.5em 1em;
    width: 100%;
    display:flex;
    flex-direction: row;
    align-items: center;
    justify-content:space-around;
}

#menu_logo a img{
    width: 8em;
}

/* usamos flex para que los elementos de la lista queden en línea, y con justify-content y align-items los centramos y separamos dejando espacios entre ellos. Eliminamos los puntos, el padding-inline-start, margin-block-start y margin-block-end que tienen los ul por defecto. Webkit para compatibilidad*/

.menu_items{
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: distribute;
        justify-content: space-around;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    list-style-type: none;
    -webkit-padding-start: 0;
            padding-inline-start: 0;
    -webkit-margin-before: 0;
            margin-block-start: 0;
    -webkit-margin-after: 0;
            margin-block-end: 0;
}

.menu_item{
    padding: 0 1.5em;
}

/* le quitamos el underline al link y modificamos el aspecto de los links. Empleamos un cálculo realizado con clamp y calc para conseguir que el tamaño del texto se vaya adaptando de forma más fluida según el tamaño del navegador. También usamos display:inline-block para que este elemento ocupe todo su espacio y a la vez actúe como un elemento inline. La posición es relativa para poder posicionar los peusoelementos ::after */

.menu_items li a{
    text-decoration: none;
    color:var(--text-white);
    font-family: var(--text-font);
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: var(--accent-orange);
    font-size: clamp(1.8rem, calc(1.8rem + ((1vw - 0.48rem) * 0.2778)), 2rem);
    text-transform: uppercase;
    padding: 1em;
    display: inline-block;
    position: relative;
}

/*  esto es para cambiar el color de los elementos del menú cuando el ratón pasa por encima, con una pequeña transición para que no quede muy brusco y webkit para evitar problemas de compatibilidad*/

.menu_items li a:hover{
    color:var(--accent-orange);
    -webkit-text-stroke-width: 0px;
    -webkit-transition: .2s;
    -o-transition: .2s;
    transition: .2s;
}

/* con esto posicionamos la línea naranja subrayando al elemento por el que se está pasando el ratón, empleando ::after y el elemento como background */

.menu_items li a:hover::after{
    content: '';
    position: absolute;
    bottom: 1rem;
    left: -0.5rem;
    right: -0.5rem;
    height: 12%;
    z-index: 1;
    background-image: url('../img/underline_orange.svg');
    background-repeat: no-repeat;
    background-size: cover;
}

/* CLASE ACTIVE */

/* esta clase se verá cuando algún elemento del menú esté activo, es decir, sea el nombre de la página en la que se encuentre el usuario. Usamos position relative para poder ubicar el pseudoelemento ::after */

.menu_items li.active, .menu_items li.active a{
    position: relative;
}

/* con esto agregamos el subrayado como fondo debajo del elemento del menú cuando este tenga la clase active, usando z-index para traerlo al frente */

.menu_items li.active::after{
    content: '';
    position: absolute;
    bottom: 1rem;
    left: 2rem;
    right: 2rem;
    height: 12%;
    z-index: -1;
    background-image: url('../img/underline.svg');
    background-repeat: no-repeat;
    background-size: cover;
}

/* MENÚ HAMBURGUESA */

/* este es el menú que aparecerá al llegar a cierto tamaño (indicado en el media query), por lo que en resoluciones grandes está oculto con un display:none */

#burger_menu{
    display: none;
}

/* con esta clase creamos las líneas que forman el icono de hamburguesa del menú usando el mismo gráfico que las líneas que subrayan los elementos del menú, añadiendo una pequeña transición para cuando se haga clic y se realice el cambio */

.burger-line {
    border-radius: 15px;
    height: 7px;
    width: 2.6em;
    display: block;
    background-image: url('../img/underline.svg');
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center;
    transition: all .5s;
    margin-top: 10px;
    margin-left: 1rem;
}

/* estas tres clases son las que serán añadidas a las líneas correspondientes y harán que las tres líneas se vuelvan una X al hacer clic sobre el icono del menú hamburguesa */

.primera {
    transform: translateY(12px) rotate(45deg);
    transition: all 0.4s;
}

.segunda {
    opacity: 0;
    transition: all 0s;
}

.tercera {
    transform: translateY(-20px) rotate(-45deg);
    transition: all 0.4s;
}

/* esta clase nos permite mostrar/ocultar el menú en móvil al hacer clic sobre el botón */

ul.show{
    top:0;
    left: 0;
    right: 0;
    bottom: 0;
}

/* TARJETA "SKILLS"*/

/* en esta especie de "tarjeta" se visualizarán los datos de la base de datos. Comenzamos por darle display flex y centrar los elementos (tarjeta y slider) con align-items y justify-content */

#skills{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

/* TARJETA */

/* con esto le damos estilo a la tarjeta (tamaño, fondo, centrar elementos con display:flex). Para el título h1 empleamos otro cálculo realizado con clamp y calc para conseguir que el tamaño del texto se vaya adaptando de forma más fluida según el tamaño del navegador.  */

#card{
    display: flex;
    justify-content:space-evenly;
    align-items: center;
    background-image: url(../img/card_bg.png);
    background-repeat: no-repeat;
    background-size: 100% 100%;
    width:70vw;
    padding: 2rem;
    padding-bottom: 3rem;
}

#card h1{
    font-family: var(--title-font);
    color: var(--text-white);
    text-align: center;
    font-size: clamp(1.5rem, calc(1.5rem + ((1vw - 0.48rem) * 1.3889)), 2.5rem);
    margin-block-end: 0;
}

/* logramos que el círculo que corresponde con cada skill esté rodeada por un círculo de aspecto "pintado" usando position:relative en el div padre y con ::after posicionamos dicho círculo como background */

#img_skill{
    position: relative;
}

#img_skill img{
    width: 16rem;
}

#img_skill::after{
    content: '';
    position: absolute;
    bottom:  0.5rem;
    left: 0rem;
    right: 0rem;
    height: 96.5%;
    z-index: -1;
    background-image: url('../img/circle.svg');
    background-repeat: no-repeat;
    background-size: cover;
}

/* le damos un tamaño a la parte de la descripción de la tarjeta y display:flex con flex-direction:column para que los elementos salgan en columna. Volvemos a usar el cálculo con clamp para hacer que el texto se adapte de forma fluida al tamaño del navegador. */

#description {
    width: 60%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#description p{
    font-family: var(--text-font);
    color: var(--text-white);
    font-size: clamp(1rem, calc(1rem + ((1vw - 0.48rem) * 2.7778)), 3rem);
    font-variant: small-caps;
    margin-block-start: 0.1em;
    margin-block-end: 1em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
}

/* usamos span para incluir las imágenes de los iconos de los controles asociados con cada skill y poder intercalarlos con la descripción. Con vertical-align:middle nos aseguramos que las imágenes están centradas de forma vertical al texto */

#description span{
    text-align: center
}

#description span img{
    width:1em;
    vertical-align:middle;
}

/* con esto logramos colocar un recuadro de efecto "pintado" alrededor de la foto de ejemplo de la skill dentro del juego usando el mismo método de antes: position relative en el elemento padre, ::after posicionado con top, bottom, left y rigth y recuadro como background-image */

#description_img{
    position: relative;
    margin-bottom: 1.5em;
}

#description_img img{
    width: 18em;
}

#description_img::after{
    content: '';
    position: absolute;
    top: -2em;
    bottom: -2em;
    left: -1.2em;
    right: -1.2em;
    z-index: -2;
    background-image: url('../img/frame.png');
    background-repeat: no-repeat;
    background-size: cover;
}

/* SLIDER */
/* modificación del estilo del carrusel del plugin de JQuery "Owl Carousel.js" para adaptarlo a las necesidades del proyecto. Comenzamos por el contenedor padre del slider/carrusel, indicando su tamaño, centrar el elemento al crearse el margen automáticamente y equitativamente entre ambos lados (derecho e izquierdo) */

.carousel-wrap {
    width: 85vw;
    margin: auto;
    /* position: relative; */
}

.slider{
    padding: 0 10em;
}

.owl-carousel .owl-nav{
    overflow: hidden;
    height: 0px;
}

.item img{
    width: 7em;
    opacity: 0.3;
    -webkit-transition: all .4s;
    -o-transition: all .4s;
    transition: all .4s;
}

.item img:hover{
    opacity: 1;
    cursor: pointer;
}

.center img{
    opacity: 1 !important;
}

.center::after{
    content: '';
    position: absolute;
    bottom: 0rem;
    left: 0rem;
    right: 0rem;
    height: 98%;
    z-index: -1;
    background-image: url('../img/circle.svg');
    background-repeat: no-repeat;
    background-size: cover;
}

.owl-carousel .nav-btn{
    position: absolute;
    cursor: pointer;
    top: 50px !important;
}

.nav-btn img{
    width: 2em;
}

.owl-carousel .owl-prev.disabled,
.owl-carousel .owl-next.disabled{
    pointer-events: none;
    opacity: 0.2;
}

.owl-carousel .prev-slide{
    transform: rotate(-180deg);
    opacity: 0.5;
    left: 100px;
}

.owl-carousel .next-slide{
    opacity: 0.5;
    right: 100px;
}

.owl-carousel .prev-slide:hover,.next-slide:hover{
    opacity: 1;
}
  
  

@media screen and (max-width: 793px) {

    .menu{
        justify-content: space-around;
        padding: 0.8em 2em;
    }

    .menu_items {
      /* le ponemos una posición fija porque queremos hacer una pequeña animación en la que el menú salga desde arriba. Webkit para compatibilidad*/
      position: fixed;
      top: -110vh;
      -webkit-transition: all .4s;
      -o-transition: all .4s;
      transition: all .4s;

      /* también cambiamos la dirección del flex-direction a column para que los elementos del menú salgan en columna y ocupando toda la pantalla. Webkit para compatibilidad */
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -ms-flex-direction: column;
      flex-direction: column;
      width: 100%;
      height: 100%;
      background-color: rgba(34, 34, 34, 0.774);
      text-align: center;
      padding-top: 5em;
      z-index: 10;
    }
    
    #burger_menu {
        cursor: pointer;
        display: flex;
        justify-content: center;
        flex-direction: column;
        z-index: 11;
    }

    #menu_logo{
        z-index: 11;
    }

    .menu_items li a{
        font-size: 2em;
    }
    
    #skills{
        flex-direction:column-reverse;
    }

    #card{
        flex-direction: column;
        width:90vw;
    }
}


